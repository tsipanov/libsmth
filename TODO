//////////////////////////////////////TODO//////////////////////////////////////

* controllare che la parsetfhd non possa essere semplificata
* scrivere che se fallisce l'analisi, lo stato del fragment potrebbe essere indefinito
* Controllare che i flag in parseencr funzionino a dovere
* Cerchiamo di unificare Sample e DefaultSample
* Trasformare i diecimila return in parsefragment in un solo enunciato
* controllare che se i flags sono omessi, risalga Default e Fragment
* anche se non Ã¨ pericoloso, controllare gli errori ad ogni check in XML

#define stolower(str) int i; for (i = 0; str[i]; i++) str[i] = tolower(str[i]);
//fprintf(stderr, "Parse error at line %lu:\n%s\n",
//	XML_GetCurrentLineNumber(parser),
//	XML_ErrorString(XML_GetErrorCode(parser)));	
trasformare le iterazioni su array in puntatori
controllare la reale dimensione di %lu

rimuovere files in blocco dopo un po'

controllare gli errori sul atoi e che 't' sia piu` affidabile
(tolower(attr[i + 1][0]) == 't'); semplificare

sistemare i nuovi frammenti

#if 0
struct {
	count_t index;
	base64data* content;
} ChunkIndex;

 Manifest->url
 Manifest->chunks[i]->fragments[j]->
#endif

forse bisognerebbe anche segnalare il tipo del padre da cui proviene una uuidbox

FIXME il decoder base64!!
// TODO controllare nel corpo che il puntatore appropriato sia ancora azzerato che sia tutto ok.
// E se finalize ritornasse la lunghezza?
// Chiarire se manifestparsed serve...
// Trasformare anche metrics in un array...

